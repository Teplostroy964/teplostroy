import React, { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { FiArrowRight, FiCheck } from "react-icons/fi";
import "./Quiz.css";

const Quiz = () => {
  const [step, setStep] = useState(1);
  const [answers, setAnswers] = useState({});
  const [formData, setFormData] = useState({
    name: "",
    phone: "",
    email: "",
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [isSuccess, setIsSuccess] = useState(false);

  const questions = [
    {
      id: 1,
      question: "–ö–∞–∫–æ–π —Ç–∏–ø –¥–æ–º–∞ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
      options: [
        { value: "–ö–∏—Ä–ø–∏—á–Ω—ã–π", icon: "üè†" },
        { value: "–î–µ—Ä–µ–≤—è–Ω–Ω—ã–π (–±—Ä—É—Å, –±—Ä–µ–≤–Ω–æ)", icon: "üå≤" },
        { value: "–ö–∞—Ä–∫–∞—Å–Ω—ã–π", icon: "üõ†Ô∏è" },
        { value: "–ì–∞–∑–æ–±–µ—Ç–æ–Ω–Ω—ã–π", icon: "üß±" },
        { value: "–ï—â–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª—Å—è", icon: "‚ùì" },
      ],
    },
    {
      id: 2,
      question: "–ö–∞–∫–∞—è –ø–ª–æ—â–∞–¥—å –¥–æ–º–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è?",
      options: [
        { value: "–î–æ 100 –º¬≤", icon: "üìè" },
        { value: "100-150 –º¬≤", icon: "üìê" },
        { value: "150-200 –º¬≤", icon: "üìä" },
        { value: "–ë–æ–ª–µ–µ 200 –º¬≤", icon: "üè¢" },
      ],
    },
    {
      id: 3,
      question: "–ö–æ–≥–¥–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ?",
      options: [
        { value: "–í —Ç–µ—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞", icon: "‚è±Ô∏è" },
        { value: "1-3 –º–µ—Å—è—Ü–∞", icon: "üìÖ" },
        { value: "3-6 –º–µ—Å—è—Ü–µ–≤", icon: "üóìÔ∏è" },
        { value: "–ë–æ–ª–µ–µ —á–µ–º —á–µ—Ä–µ–∑ 6 –º–µ—Å—è—Ü–µ–≤", icon: "‚è≥" },
      ],
    },
    {
      id: 4,
      question: "–ö–∞–∫–æ–π –±—é–¥–∂–µ—Ç –Ω–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ?",
      options: [
        { value: "–î–æ 2 –º–ª–Ω —Ä—É–±.", icon: "üí∞" },
        { value: "2-4 –º–ª–Ω —Ä—É–±.", icon: "üíµ" },
        { value: "4-6 –º–ª–Ω —Ä—É–±.", icon: "üí≥" },
        { value: "–ë–æ–ª–µ–µ 6 –º–ª–Ω —Ä—É–±.", icon: "ü™ô" },
      ],
    },
  ];

  const handleAnswer = (question, answer) => {
    setAnswers((prev) => ({
      ...prev,
      [question]: answer,
    }));
    setStep((prev) => prev + 1);
  };

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsSubmitting(true);

    try {
      const response = await fetch("/api/submit-quiz", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          ...formData,
          answers,
        }),
      });

      const data = await response.json();

      if (data.success) {
        setIsSuccess(true);
      }
    } finally {
      setIsSubmitting(false);
    }
  };

  const progress = ((step - 1) / (questions.length + 1)) * 100;

  return (
    <div className="quiz-page">
      <div className="quiz-container">
        <div className="quiz-header">
          <h1>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –¥–æ–º–∞</h1>
          <p>–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ 5 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –ø–æ–ª—É—á–∏—Ç–µ —Ç–æ—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏</p>
        </div>

        <div className="quiz-progress-container">
          <div
            className="quiz-progress"
            style={{ width: `${progress}%` }}
          ></div>
          <div className="quiz-steps">
            –®–∞–≥ {step} –∏–∑ {questions.length + 1}
          </div>
        </div>

        <div className="quiz-content">
          {isSuccess ? (
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              className="quiz-success"
            >
              <div className="success-icon">
                <FiCheck />
              </div>
              <h2>–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã!</h2>
              <p>–ú—ã —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∞—à—É –∑–∞—è–≤–∫—É –∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.</p>
              <div className="success-details">
                <h3>–î–µ—Ç–∞–ª–∏ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:</h3>
                <ul>
                  {Object.entries(answers).map(([question, answer]) => (
                    <li key={question}>
                      <strong>{question}:</strong> {answer}
                    </li>
                  ))}
                </ul>
              </div>
              <a href="/" className="home-link">
                –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
              </a>
            </motion.div>
          ) : (
            <>
              <AnimatePresence mode="wait">
                {step <= questions.length ? (
                  <motion.div
                    key={`question-${step}`}
                    initial={{ opacity: 0, x: 50 }}
                    animate={{ opacity: 1, x: 0 }}
                    exit={{ opacity: 0, x: -50 }}
                    transition={{ duration: 0.3 }}
                    className="quiz-question"
                  >
                    <h2>{questions[step - 1].question}</h2>
                    <div className="quiz-options">
                      {questions[step - 1].options.map((option, i) => (
                        <button
                          key={i}
                          className="quiz-option"
                          onClick={() =>
                            handleAnswer(
                              questions[step - 1].question,
                              option.value
                            )
                          }
                        >
                          <span className="option-icon">{option.icon}</span>
                          <span className="option-text">{option.value}</span>
                          <FiArrowRight className="option-arrow" />
                        </button>
                      ))}
                    </div>
                  </motion.div>
                ) : (
                  <motion.form
                    key="contact-form"
                    initial={{ opacity: 0, x: 50 }}
                    animate={{ opacity: 1, x: 0 }}
                    exit={{ opacity: 0, x: -50 }}
                    transition={{ duration: 0.3 }}
                    onSubmit={handleSubmit}
                    className="quiz-form"
                  >
                    <h2>–û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞</h2>
                    <p>
                      –ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏
                    </p>

                    <div className="form-group">
                      <label>–í–∞—à–µ –∏–º—è</label>
                      <input
                        type="text"
                        name="name"
                        placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                        value={formData.name}
                        onChange={handleInputChange}
                        required
                      />
                    </div>

                    <div className="form-group">
                      <label>–¢–µ–ª–µ—Ñ–æ–Ω</label>
                      <input
                        type="tel"
                        name="phone"
                        placeholder="+7 (999) 123-45-67"
                        value={formData.phone}
                        onChange={handleInputChange}
                        required
                      />
                    </div>

                    <div className="form-group">
                      <label>Email (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</label>
                      <input
                        type="email"
                        name="email"
                        placeholder="example@mail.com"
                        value={formData.email}
                        onChange={handleInputChange}
                      />
                    </div>

                    <button
                      type="submit"
                      className="quiz-submit"
                      disabled={isSubmitting}
                    >
                      {isSubmitting ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—á–µ—Ç"}
                    </button>
                  </motion.form>
                )}
              </AnimatePresence>
            </>
          )}
        </div>
      </div>
    </div>
  );
};

export default Quiz;
